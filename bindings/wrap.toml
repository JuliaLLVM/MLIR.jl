[general]
library_name = "MLIR_C_PATH[]"
output_file_path = "libMLIR_h.jl"
prologue_file_path = ""
epilogue_file_path = ""
use_julia_native_enum_type = false
use_deterministic_symbol = true
smart_de_anonymize = true
extract_c_comment_style = "doxygen"
fold_single_line_comment = false
struct_field_comment_style = "outofline"
show_c_function_prototype = false
printer_blacklist = [
    "MAKE_MLIR_PYTHON_QUALNAME",
]
output_ignorelist = [
    "MlirTypeID",
    "MlirTypeIDAllocator",
    "MlirLlvmThreadPool",
    "MlirStringRef",
    "MlirLogicalResult",
    "MlirContext",
    "MlirDialect",
    "MlirDialectHandle",
    "MlirDialectRegistry",
    "MlirOperation",
    "MlirOpOperand",
    "MlirOpPrintingFlags",
    "MlirBlock",
    "MlirRegion",
    "MlirSymbolTable",
    "MlirAttribute",
    "MlirIdentifier",
    "MlirLocation",
    "MlirModule",
    "MlirType",
    "MlirValue",
    "MlirNamedAttribute",
    "MlirOperationState",
    "MlirAffineExpr",
    "MlirAffineMap",
    "MlirPass",
    "MlirExternalPass",
    "MlirPassManager",
    "MlirOpPassManager",
    "MlirExternalPassCallbacks",
    "MlirDiagnostic",
    "MlirExecutionEngine",
    "MlirIntegerSet",
    "MlirAsmState",
    "MlirBytecodeWriterConfig",
]

[codegen]
use_julia_bool = true
always_NUL_terminated_string = true
is_function_strictly_typed = false
opaque_func_arg_as_PtrCvoid = false
opaque_as_mutable_struct = true
use_ccall_macro = true

[codegen.macro]
macro_mode = "basic"
add_comment_for_skipped_macro = false